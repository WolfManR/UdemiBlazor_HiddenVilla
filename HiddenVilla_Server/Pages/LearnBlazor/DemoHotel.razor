@page "/demoHotel"
@using Model


<h3>We will display hotel rooms and amenitites here!</h3>

<div class="border p-2 mt-2" style="background-color: azure">
    <h2 class="text-info">Room List [USING COMPONENT]</h2>
    <div class="col-12">
        <h4 class="text-info">Hotel Room's</h4>
        <span>Rooms Selected - @SelectedRooms</span>
    </div>
    <div class="row container">
        @foreach (var room in _rooms)
        {
            <IndividualRoom OnRoomCheckBoxSelection="RoomSelectionCounterChanged" Room="@room"/>
        }
    </div>
    
    <div class="col-12 mt-4">
        <h4 class="text-info">Hotel Amenitie's[assignment]</h4>
    </div>
    <div class="row container">
        @foreach (var amenity in _amenities)
        {
            <IndividualAmenity OnAmenitySelected="OnSelectAmenity" Amenity="@amenity">
                <First>#1</First>
                <Second>#2</Second>
            </IndividualAmenity>
        }
    </div>
    
    <div class="col-12">
        <p class="text-secondary">Selected amenity : @SelectedAmenity</p>
    </div>
    
</div>


@code {
    List<BlazorRoom> _rooms = new();

    List<Amenity> _amenities = new();

    public int SelectedRooms { get; set; } = 0;
    public string SelectedAmenity { get; set; }
    

    #region Overrides of ComponentBase

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        base.OnInitialized();

        _rooms.Add(new()
        {
            Id = 101,
            RoomName = "King Suite",
            IsActive = false,
            Price = 100,
            RoomProps = new()
            {
                new() {Id = 1, Name = "Sq Ft", Value = "100"},
                new() {Id = 2, Name = "Occupancy", Value = "3"},
            }
        });
        _rooms.Add(new()
        {
            Id = 102,
            RoomName = "Quine Suite",
            IsActive = false,
            Price = 70,
            RoomProps = new()
            {
                new() {Id = 1, Name = "Sq Ft", Value = "150"},
                new() {Id = 2, Name = "Occupancy", Value = "6"},
            }
        });

        _amenities.AddRange(new[]
        {
            new Amenity()
            {
                Id = 111,
                Name = "Gym",
                Description = "24x7 gym room is available."
            },
            new Amenity()
            {
                Id = 222,
                Name = "Swimming Pool",
                Description = "Pool room is open from 6am to 10pm."
            },
            new Amenity()
            {
                Id = 333,
                Name = "Free Breakfast",
                Description = "Enjoy free breakfast at our hotel."
            },
        });
    }

    #endregion


    protected void RoomSelectionCounterChanged(bool isRoomSelected)
    {
        if (isRoomSelected) SelectedRooms++;
        else SelectedRooms--;
    }

    protected void OnSelectAmenity(string name)
    {
        if(SelectedAmenity == name) return;
        SelectedAmenity = name;
    }
}