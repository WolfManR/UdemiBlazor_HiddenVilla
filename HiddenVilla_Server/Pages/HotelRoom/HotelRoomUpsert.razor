@page "/hotel-room/create"
@page "/hotel-room/edit/{id:int}"
@using Models
@using Business.Repository.IRepository
@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
    
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
                    <DataAnnotationsValidator/>
                    @* <ValidationSummary/> *@
                    
                    <div class="form-group">
                        <label>Name</label>
                        <InputText @bind-Value="HotelRoomModel.Name" class="form-control"/>
                        <ValidationMessage For="() => HotelRoomModel.Name"/>
                    </div>
                    <div class="form-group">
                        <label>Occupancy</label>
                        <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"/>
                        <ValidationMessage For="() => HotelRoomModel.Occupancy"/>
                    </div>
                    <div class="form-group">
                        <label>Rate</label>
                        <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"/>
                        <ValidationMessage For="() => HotelRoomModel.RegularRate"/>
                    </div>
                    <div class="form-group">
                        <label>Sq ft.</label>
                        <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label>Details</label>
                        <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"/>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary">@Title Room</button>
                        <NavLink href="hotel-room" class="btn btn-secondary">Back to Index</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    private HotelRoomDTO HotelRoomModel { get; set; } = new();
    private string Title { get; set; } = "Create";

    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
        {
            // updating
            Title = "Update";
            HotelRoomModel = await HotelRoomRepository.Get(Id.Value);
        }
        else
        {
            // create
            HotelRoomModel = new HotelRoomDTO();
        }
    }

    private async Task HandleHotelRoomUpsert()
    {
        try
        {
            var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name, HotelRoomModel.Id);
            if (roomDetailsByName is not null)
            {
                await JsRuntime.ToastrError("Room name already exists.");
                return;
            }

            if(this is {HotelRoomModel: {Id: <0 or >0 }, Title: "Update"})
            {
                // updating
                var updateRoomResult = await HotelRoomRepository.Update(HotelRoomModel.Id, HotelRoomModel);
                await JsRuntime.ToastrSuccess("Hotel room updated successfully.");
            }
            else
            {
                // create
                var createdResult = await HotelRoomRepository.Create(HotelRoomModel);
                await JsRuntime.ToastrSuccess("Hotel room created successfully.");
            }
        }
        catch (Exception e)
        {
            // log
        }

        NavigationManager.NavigateTo("hotel-room");
    }
}
